// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

enum PriceChangeSource {
  APP
  MERCHANT
}

enum CampaignType {
  SALE
  CONDITIONAL
}

enum CampaignStatus {
  DRAFT
  SCHEDULED
  ACTIVE
  FINISHED
}

model PriceHistory {
  id             Int               @id @default(autoincrement())
  variantId      String
  price          Decimal
  compareAtPrice Decimal?
  changedAt      DateTime
  changedBy      PriceChangeSource
  campaign       Campaign?         @relation(fields: [campaignId], references: [id])
  campaignId     Int?
}

model Campaign {
  id             Int            @id @default(autoincrement())
  name           String
  type           CampaignType
  startAt        DateTime
  endAt          DateTime
  discountLogic  Json
  status         CampaignStatus
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  priceHistories PriceHistory[]

  campaignProducts CampaignProduct[]
}

model CampaignProduct {
  id         String @id @default(cuid())
  campaignId Int
  variantId  String

  campaign Campaign @relation(fields: [campaignId], references: [id])

  createdAt DateTime @default(now())
}

// prisma/schema.prisma
model Product {
  id        String    @id // Shopify GID, e.g. gid://shopify/Product/123
  title     String
  vendor    String?
  handle    String?
  variants  Variant[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Variant {
  id        String   @id // Shopify GID, e.g. gid://shopify/ProductVariant/456
  title     String
  sku       String?
  price     Decimal
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title])
}
